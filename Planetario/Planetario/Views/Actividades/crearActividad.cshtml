@model Planetario.Models.ActividadModel
@{ 
    ViewBag.Title = "Crear Actividad";
    List<SelectListItem> Categorias = new List<SelectListItem>() {
        new SelectListItem { Text = "Cuerpos del Sistema Solar", Value = null },
        new SelectListItem { Text = "Objetos de Cielo Profundo", Value = "Objetos de Cielo Profundo"  },
        new SelectListItem { Text = "Astronomia", Value = "Astronomia" },
        new SelectListItem { Text = "General", Value = "General" },
    };
}

<html>
<head>
    <meta charset="utf-8" />
    <link rel="stylesheet" type="text/css" href="~/Utils/css/main.css">
</head>
<body>
    @if (ViewBag.Message != null)
    {
        if (ViewBag.ExitoAlCrear)
        {
            <div class="alert-success">
                <h3> @ViewBag.Message </h3>
            </div>
        }
        else
        {
            <div class="alert-danger">
                <h3> @ViewBag.Message </h3>
            </div>
        }
    }

    <span class="titulo">
        Agregar Actividad
    </span>

    @using (Html.BeginForm("crearActividad", "Actividades", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <h4>Ingrese los datos para crear una Actividad</h4>
        <hr />
        <div class="row">
            <div class="col-6 col-md-6 col-sm-12">
                @Html.LabelFor(model => model.NombreActividad, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.NombreActividad, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NombreActividad, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Categoria, Categorias, "--Categoría--", new { @id = "categoriaPregunta", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Duracion, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Duracion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Duracion, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Complejidad, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Complejidad, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Complejidad, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.PublicoDirigido, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.PublicoDirigido, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PublicoDirigido, "", new { @class = "text-danger" })
                </div>

                <div class="form-check form-switch">
                    @Html.Label("virtual", "¿Es virtual?")
                    @Html.CheckBox("virtual", false, htmlAttributes: new { @class = "form-check-input", @onclick = "addbox()" })
                </div>
                <div>
                    @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label", @id = "areaLabel", style = "display : none;" })
                    @Html.TextBoxFor(model => model.Link, new { @class = "form-control", @id = "area", style = "display : none;" })
                </div>

            </div>
            <div class="col-6 col-md-6 col-sm-12">
                @Html.LabelFor(model => model.Duracion, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Duracion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Duracion, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.PrecioAproximado, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.PrecioAproximado, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PrecioAproximado, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.DiaSemana, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.DiaSemana, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DiaSemana, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.PropuestoPor, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.PropuestoPor, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PropuestoPor, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div>
                <input type="submit" class="btn btn-success" value="Crear" />
                @Html.ActionLink("Volver", "listadoDeActividades", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    }
    <div>
        @Html.ActionLink("Regresar a Inicio", "InformacionBasica", "Home")
    </div>

    <script>

    function addbox() {
        if (document.getElementById('virtual').checked) {
            document.getElementById('area').style.display = 'block';
            document.getElementById('areaLabel').style.display = 'block';
        } else {
            document.getElementById('area').style.display = 'none';
            document.getElementById('areaLabel').style.display = 'none';
        }
    }
    </script>
</body>
</html>